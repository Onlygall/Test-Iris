# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gMp7qyglE3qDftbl8AKpf3Yixle2kydq
"""
import streamlit as st
import pandas as pd
import numpy as np
import joblib
import os
from sklearn.datasets import load_iris
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.naive_bayes import GaussianNB

# Load Iris dataset
iris = load_iris()
df = pd.DataFrame(iris.data, columns=iris.feature_names)
df['target'] = iris.target
df['target_name'] = df['target'].apply(lambda x: iris.target_names[x])

# Load model or train if not found
MODEL_PATH = 'naive_bayes_iris.pkl'

def load_or_train_model():
    if os.path.exists(MODEL_PATH):
        try:
            model = joblib.load(MODEL_PATH)
        except Exception as e:
            st.error(f"Model file found but could not be loaded: {e}")
            return None
    else:
        st.warning("Model file not found. Training a new model and saving it as naive_bayes_iris.pkl.")
        model = GaussianNB()
        model.fit(iris.data, iris.target)
        joblib.dump(model, MODEL_PATH)
    return model

model = load_or_train_model()
if model is None:
    st.stop()

# Sidebar untuk navigasi
st.sidebar.title("ðŸ§ª Iris Classifier")
page = st.sidebar.radio("Pilih Halaman", ["ðŸ“„ Deskripsi Data", "ðŸ”® Prediksi", "ðŸ“Š Visualisasi"])

# Halaman 1: Deskripsi Data
if page == "ðŸ“„ Deskripsi Data":
    st.title("ðŸ“„ Deskripsi Dataset Iris")
    st.markdown("""
    Dataset Iris adalah kumpulan data klasik yang sering digunakan untuk masalah klasifikasi.
    Dataset ini berisi 150 data bunga iris dengan fitur:
    - Panjang dan lebar sepal
    - Panjang dan lebar petal

    Tiga jenis bunga iris:
    - Setosa
    - Versicolor
    - Virginica
    """)
    st.dataframe(df.head())
    st.write("Distribusi Kelas:")
    st.bar_chart(df['target_name'].value_counts())

# Halaman 2: Prediksi
elif page == "ðŸ”® Prediksi":
    st.title("ðŸ”® Prediksi Spesies Iris")
    st.write("Masukkan data bunga di bawah ini:")

    # Input fitur
    sepal_length = st.slider('Panjang Sepal (cm)', 4.0, 8.0, 5.0)
    sepal_width = st.slider('Lebar Sepal (cm)', 2.0, 4.5, 3.0)
    petal_length = st.slider('Panjang Petal (cm)', 1.0, 7.0, 4.0)
    petal_width = st.slider('Lebar Petal (cm)', 0.1, 2.5, 1.0)

    # Prediksi
    input_data = np.array([[sepal_length, sepal_width, petal_length, petal_width]])
    prediction = model.predict(input_data)
    prediction_idx = int(np.array(prediction).flatten()[0])  # Perbaiki baris ini
    prediction_proba = model.predict_proba(input_data)[0]

    #predicted_species = str(iris.target_names[prediction_idx]).capitalize()

    predicted_species = str(iris.target_names[prediction_idx]).capitalize()
    st.success(f"Prediksi: **{predicted_species}**")
    st.subheader("Probabilitas:")
    st.bar_chart({
        'Setosa': [prediction_proba[0]],
        'Versicolor': [prediction_proba[1]],
        'Virginica': [prediction_proba[2]],
    })
# Halaman 3: Visualisasi
else:
    st.title("ðŸ“Š Visualisasi Data Iris")
    st.write("Scatter plot fitur untuk melihat pola antara spesies.")

    fig, axes = plt.subplots(1, 2, figsize=(12, 5))

    sns.scatterplot(ax=axes[0], data=df, x=iris.feature_names[0], y=iris.feature_names[1],
                    hue='target_name', palette='Set2')
    axes[0].set_title("Sepal: Panjang vs Lebar")

    sns.scatterplot(ax=axes[1], data=df, x=iris.feature_names[2], y=iris.feature_names[3],
                    hue='target_name', palette='Set1')
    axes[1].set_title("Petal: Panjang vs Lebar")

    st.pyplot(fig)
# Halaman 4: Foto Bunga
elif page == "ðŸŒ¸ Foto Bunga":
    st.title("ðŸŒ¸ Foto Jenis Bunga Iris")
    st.markdown("Berikut adalah gambar dari tiga spesies bunga Iris:")

    col1, col2, col3 = st.columns(3)

    with col1:
        st.image("https://upload.wikimedia.org/wikipedia/commons/4/41/Iris_setosa_2.jpg", caption="Setosa", use_column_width=True)

    with col2:
        st.image("https://upload.wikimedia.org/wikipedia/commons/9/9f/Iris_versicolor_3.jpg", caption="Versicolor", use_column_width=True)

    with col3:
        st.image("https://upload.wikimedia.org/wikipedia/commons/6/60/Iris_virginica.jpg", caption="Virginica", use_column_width=True)

